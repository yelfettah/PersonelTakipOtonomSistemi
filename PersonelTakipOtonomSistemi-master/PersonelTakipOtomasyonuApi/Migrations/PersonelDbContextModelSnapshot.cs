// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonelTakipOtomasyonuApi.Data;

#nullable disable

namespace PersonelTakipOtomasyonuApi.Migrations
{
    [DbContext(typeof(PersonelDbContext))]
    partial class PersonelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonelTakipOtomasyonuApi.Models.Personel", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IseBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<double>("Maas")
                        .HasColumnType("float");

                    b.Property<string>("Pozisyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aktifMi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("yillikIzinHakki")
                        .HasColumnType("int");

                    b.HasKey("PersonelID");

                    b.ToTable("Personeller");

                    b.HasData(
                        new
                        {
                            PersonelID = 1,
                            Ad = "Admin",
                            Departman = "IT",
                            DogumTarihi = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Eposta = "admin@company.com",
                            IseBaslamaTarihi = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Maas = 15000.0,
                            Pozisyon = "Yonetici",
                            Sifre = "123456",
                            Soyad = "User",
                            TCKimlikNo = "12345678901",
                            TelefonNo = "5551234567",
                            aktifMi = "Aktif",
                            yillikIzinHakki = 20
                        },
                        new
                        {
                            PersonelID = 2,
                            Ad = "Test",
                            Departman = "Satış",
                            DogumTarihi = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Eposta = "test@company.com",
                            IseBaslamaTarihi = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Maas = 8000.0,
                            Pozisyon = "Personel",
                            Sifre = "123456",
                            Soyad = "Personel",
                            TCKimlikNo = "11111111111",
                            TelefonNo = "5559876543",
                            aktifMi = "Aktif",
                            yillikIzinHakki = 15
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
